name: Run Python Scripts from n8n

# Gatilho para ser acionado pelo n8n
on:
  workflow_dispatch:
  repository_dispatch:
    types: [run-scripts]

# Define os trabalhos a serem executados
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 1. Faz o checkout do código do seu repositório
      - name: Check out repository
        uses: actions/checkout@v4

      # 2. Configura o ambiente Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      # 3. Instala as dependências do seu script
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas matplotlib seaborn requests Babel reportlab

      # 4. Baixa o arquivo de entrada do Google Drive
      - name: Download input file from Google Drive
        uses: satackey/action-google-drive@v1
        with:
          credentials: ${{ secrets.GDRIVE_CREDENTIALS }}
          gdrive-file-id: ${{ github.event.client_payload.file_name_gdrive }}
          gdrive-folder-id: 'SUA_INFO_AQUI_ID_DA_PASTA_DO_DRIVE'
          download-to: './'

      # 5. Executa o script Python e captura o nome do arquivo de saída
      - name: Run Python script and capture output
        id: run_script
        env:
          API_KEY: ${{ secrets.API_KEY }}
        run: |
          # A última linha do seu script Python deve ser um "print()" com o nome do arquivo gerado
          echo "file_name=$(python SUA_INFO_AQUI_NOME_DO_SEU_SCRIPT.py)" >> $GITHUB_OUTPUT

      # 6. Faz o upload do arquivo de resultado para o Google Drive
      - name: Upload output files to Google Drive
        uses: satackey/action-google-drive@v1
        with:
          credentials: ${{ secrets.GDRIVE_CREDENTIALS }}
          upload-from: ${{ steps.run_script.outputs.file_name }}
          gdrive-folder-id: 'SUA_INFO_AQUI_ID_DA_PASTA_DO_DRIVE'
      
      # 7. Notifica o n8n que o processo terminou, enviando o nome do arquivo processado
      - name: Notify n8n of completion
        run: |
          curl -X POST -H "Content-Type: application/json" \
          -d '{"chat_id": "${{ github.event.client_payload.chat_id }}", "processed_file_name": "${{ steps.run_script.outputs.file_name }}"}' \
          SUA_INFO_AQUI_URL_DO_WEBHOOK_WORKFLOW_2_N8N
